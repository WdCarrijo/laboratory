<?xml version='1.0' encoding="utf-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" []>
<book lang="pt">

	<xi:include href="bookinfo.xml" xmlns:xi="http://www.w3.org/2001/XInclude" />

	<!-- prefácio -->
	<preface>
		<title>Demoiselle Behave</title>
		<para>
			Behavior Driven Development(BDD) é uma técnica desenvolvida por
			Dan
			North em 2003 com o objetivo de facilitar a colaboração entre
			desenvolvedores , setores de qualidade
			e cliente em um projeto de
			software. A técnica parte do principio de
			que especificando histórias
			de usuário em um formato adequado, as
			histórias especificadas
			poderiam
			ser utilizadas tanto como requisito como artefato de entrada para
			testes automatizados. A técnica se utilizada de uma linguagem
			denominada linguagem ubíqua
			que permite que os testes de aceitação
			sejam escritos em uma linguagem
			mais próxima da linguagem de negócio.
		</para>
		<para>
			Os testes descritos são interpretados por ferramentas
			especializadas que exercitam o código do sistema para demonstrar se o
			comportamento foi atendido. As práticas
			do BDD incluem :
		</para>
		<para>

			<orderedlist numeration="arabic">
				<listitem>
					<para>
						Envolver os stakeholder do projeto (
						<citetitle pubwork="webpage">Wikipedia</citetitle>
						)
					</para>
				</listitem>
				<listitem>
					<para>
						Usar derivação por exemplos para descrever o comportamento de
						uma aplicação ou
						unidades de código
					</para>
				</listitem>
				<listitem>
					<para>
						Automatizar os exemplos para prover um feedback rápido e
						testes de regressão
					</para>
				</listitem>
				<listitem>
					<para>
						Usar Mocks para
						auxiliar na colaboração entre módulos e
						códigos que ainda não
						foram escritos
					</para>
				</listitem>
			</orderedlist>
		</para>
		<para>
			O Demoisele-Behave é um framework que permite ao usuários
			automatizar testes utilizando recursos de BDD.
		</para>
		<para>
			A aplicação apresenta quatro módulos principais Core, Parser,
			Runner e Integration. O Core é responsável pelas principais
			interfaces
			do framework.O Controller responsável pela orquestração das
			informações entre os outros 3 projetos

		</para>
		<para>
			<mediaobject>
				<imageobject role="fo">
					<imagedata fileref="images/arquitetura.png" align="center"
						format="PNG" scalefit="1" width="75%" />
				</imageobject>
				<imageobject role="html">
					<imagedata fileref="images/arquitetura.png" align="center"
						format="PNG" scalefit="1" width="75%" />
				</imageobject>
				<caption>
					<para>Arquitetura da ferramenta Demoisele-Behave.
					</para>
				</caption>
			</mediaobject>
		</para>
		<para>
			O Parser é responsável pela abstração do componente que irá
			transformar a história em código Java para enviar ao Runner por
			meio
			de sentenças padrões ou específicas de cada projeto.
		</para>
		<para>
			<mediaobject>
				<imageobject role="fo">
					<imagedata fileref="images/parsertamanhoreduzido.png"
						align="center" format="PNG" scalefit="1" width="75%" />
				</imageobject>
				<imageobject role="html">
					<imagedata fileref="images/parsertamanhoreduzido.png"
						align="center" format="PNG" scalefit="1" width="75%" />
				</imageobject>
				<caption>
					<para>Modelo de Funcionamento do Parser.
					</para>
				</caption>
			</mediaobject>
		</para>
		<para>
			O Runner é responsável pela abstração do componente que irá
			fazer as
			manipulações de tela, como o Selenium ou até mesmo
			diretamente o
			JUnit. O modulo Integration é responsável pela abstração
			do
			componente que irá fazer as
			integrações entre a solução e as
			ferramentas externas da empresa como ALM (RQM).
			O framework funciona
			de modo que histórias escritas em TXT são
			enviadas ao módulo Parser e
			posteriormente enviada
			para o Runner, responsável por interagir com um
			navegador web ou uma tela
			Desktop, utilizando o framework Selenium ou
			Fest respectivamente.
		</para>

		<para>
			<mediaobject>
				<imageobject role="fo">
					<imagedata fileref="images/funcionamento.png" align="center"
						format="PNG" scalefit="1" width="75%" />
				</imageobject>
				<imageobject role="html">
					<imagedata fileref="images/funcionamento.png" align="center"
						format="PNG" scalefit="1" width="75%" />
				</imageobject>
				<caption>
					<para>Funcionamento do Demoisele-Behave.
					</para>
				</caption>
			</mediaobject>
		</para>
		<para>
			A ferramenta deve permitir que projetistas de testes escrevam
			histórias que serão lidas e acionarão scripts
			de testes automatizados
			criados por desenvolvedores de teste.
		</para>
		<para>
			<mediaobject>
				<imageobject role="fo">
					<imagedata fileref="images/processo.png" align="center"
						format="PNG" scalefit="1" width="75%" />
				</imageobject>
				<imageobject role="html">
					<imagedata fileref="images/processo.png" align="center"
						format="PNG" scalefit="1" width="75%" />
				</imageobject>
				<caption>
					<para>Modelo de Uso do Demoisele-Behave.
					</para>
				</caption>
			</mediaobject>
		</para>
	</preface>


	<!-- índice -->
	<toc />

	<!-- capítulos -->
	<xi:include href="releasenotes.xml" xmlns:xi="http://www.w3.org/2001/XInclude" />
	<xi:include href="quickstart.xml" xmlns:xi="http://www.w3.org/2001/XInclude" />
	<xi:include href="screenmapping.xml" xmlns:xi="http://www.w3.org/2001/XInclude" />
	<xi:include href="estoria.xml" xmlns:xi="http://www.w3.org/2001/XInclude" />
	<xi:include href="configuracao.xml" xmlns:xi="http://www.w3.org/2001/XInclude" />
	<xi:include href="desktop.xml" xmlns:xi="http://www.w3.org/2001/XInclude" />
	<xi:include href="execucao.xml" xmlns:xi="http://www.w3.org/2001/XInclude" />
	<xi:include href="colaboracao.xml" xmlns:xi="http://www.w3.org/2001/XInclude" />
</book>
